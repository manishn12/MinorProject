const express = require('express');
const router = express.Router();
const bcrypt = require('bcryptjs');
const jwt = require("jsonwebtoken");


require("../db/conn.js");

const User = require("../model/userSchema.js");

router.get('/', (req, res) => {
    res.send("hello wrld i am here in router js ");
});


// this mthd, route is generated by using promises

/*router.post('/register', (req, res) => {

    const { name, mail, phone, job, passvord, cpassvord } = req.body;

    if( !name || !mail || !phone || !job || !passvord || !cpassvord ){
        return res.status(422).json({ error: "fail due to some fields is incomplete :("});
    }

    User.findOne({ mail: mail }).then((userPresent) => {                                     //findone mthd checks the user provided mail is already present in the db or not
        if(userPresent){
            return res.status(422).json({ error: "user already present so plz stfu"})       //it ensures user already exist or not
        }

        const user = new User({ name, mail, phone, job, passvord, cpassvord });

        user.save().then(() => {
            res.status(201).json({ message: "user added successfully"});
        }).catch((err) => res.status(500).json({ error: "some error occured!!"}));
    }).catch((err) => { console.log(err)});

    //console.log(mail);                               // getting the data of a form using re.body
    
}) */


//here using async mthd
// await mthd hamesha true ya false return karega or isko then() or catch se bachne ke liye use kia jata h

router.post("/register", async(req, res) => {

    const { name, mail, password, cpassword } = req.body;   //here these destructring variables must match with the schema variables otherwise it will throw an error

    if(!name || !mail || !password || !cpassword){
       return res.status(422).json({ error: "please fill all details", sum: 0});
    }

    try{

        const userexist = await User.findOne({ mail: mail });                       //await ye return karega T/F ki mail match hai ki nhi agar hua to pura data send karega

        if(userexist){
            return res.status(422).json({ error: "user already exist having same mail :)", sum: 0});
        }else if(password != cpassword){
            return res.status(422).json({ error: "passvords do not match plzz fill correct passvord :)", sum: 0});
        }else{

            const user = new User({ name, mail, password, cpassword});    // here new keyword, creates new schema filled with values 

             //its time to save our data in database

            const userRegister = await user.save();      //save function save the data to the database

            if(userRegister){
                res.status(201).json({ message: "user added successfully :)"});
            }
         
        }

     } catch (err) {
          console.log(err);
    }
})

// login route

router.post('/signin', async (req, res) => {
    try {

        let token;
        const { mail, password } = req.body;

        if(!mail || !password){
            return res.status(400).json({ error:"plz fill the details carefully", sum: 0})
        }

        const userLogin = await User.findOne({ mail: mail });               // its checks the present in the db or not if it present then it return that document 
        
        //console.log(userLogin);
        if(userLogin){

            const passMatch = await bcrypt.compare(password, userLogin.password);

            token = await userLogin.generateAuthToken();
            res.cookie("jwtoken", token, {
                expires: new Date(Date.now() + 25892000000),
                httpOnly: true
            })

            if(!passMatch){
                  res.status(400).json({ error: "invalid credentials :(", sum: 0})
            }else{
                res.status(200).json({ message: "user signed  in successfully"})
            }
        }else{

            res.status(400).json({ error: "invalid credentials :(", sum:0});
            //res.status(200).json({ message: "congo find that mail"})        //if else is using for if user is not exist then it shows error
        }
          
    } catch (err) {
        console.log(err)
    }
})


module.exports = router;